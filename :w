<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>reveal.js - The HTML Presentation Framework</title>

		<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
		<meta name="author" content="Hakim El Hattab">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.min.css">
		<link rel="stylesheet" href="css/theme/default.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', include the PDF print sheet -->
		<script>
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = 'css/print/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
			}
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">
        <section>
          <h1 class="title stretch">?</h1>
          <aside class="notes">
            Keyboard needs a new button.
            A special button.
            Call it the 'The Fuck Up'
          </aside>
        </section>

        <section data-background="#6A8907">
          <h1>Function</h1>
            <ul>
              <li>Toggle on and off</li>
              <li>Make you sound angry and/or stupid</li>
              <li>Prevent you from using a log in screen</li>
            </ul>
            <aside class="notes">
            </aside>
        </section>

        <section>
          <h1>Location</h1>
            <ul>
              <li>Next to common letter</li>
              <li>Near a regularly used modifier</li>
              <li>Bigger than average</li>
            </ul>
            <aside class="notes">
              But it's already here, and it's called...
            </aside>
        </section>
				<!-- Example of nested vertical slides -->

				<section data-background="./lib/img/simple_capslock.jpg">
          <h1 id="shouty">THE</br>
            F***</br>
            UP</br>
          BUTTON
        </h1>
            <aside class="notes">
              Caps Lock - live with it everyday but what does it do?
            </aside>
				</section>

				<section data-background="./lib/img/caps-lock-preventing-login-since-1980.gif">
						<img width="1540" src="./lib/img/caps-lock-preventing-login-since-1980.gif">
            <aside class="notes">
              For stopping you getting in to a website
            </aside>
        </section>

				<section data-background="./lib/img/power_of_capslock.gif">
						<!--<img width="1540" src="./lib/img/power_of_capslock.gif" alt="Meny">-->
            <aside class="notes">
              For... expressing yourself on the internet
            </aside>
        </section>

        <section data-background="./lib/img/enrique.jpeg">
						<img width="1540" src="./lib/img/enrique.jpeg">
            <aside class="notes">
              Enrique - Tatiana's computer - about five times - "fuck!"
            </aside>
        </section>

        <section data-background="./lib/img/typewriter_animation_2.gif">
						<img width="1540" src="./lib/img/pic-hartford.jpg">
            <aside class="notes">
              How typewriter works - hammers with glyphs on hit printed ink ribbon
              Make impression. Early on - one character per hammer - per key
              as on this early Hartford
            </aside>
        </section>

        <section data-background="./lib/img/typewriter_animation_2.gif">
						<img width="1540" src="./lib/img/pic-munson.jpg">
            <aside class="notes">
            Later - two characters per hammer - different character achieved by hitting
            paper at a different angle - to do so 'shifted' the whole mechanism up
          </aside>
        </section>

        <section data-background="./lib/img/typewriter_animation_2.gif">
						<img width="1540" src="./lib/img/shiftlock.jpg">
            <aside class="notes">
            but shift key is hard to hold down - heavy mechanism
            so invented way of locking it - the shift lock key.
          </aside>
        </section>

				<section>
					<h2>Spectacular image!</h2>
					<a class="image" href="http://lab.hakim.se/meny/" target="_blank">
						<img width="320" height="299" src="http://s3.amazonaws.com/hakim-static/portfolio/images/meny.png" alt="Meny">
					</a>
				</section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,
        //autoSlide: 15000,

				theme: 'simple', // available themes are in /css/theme
				transition: 'linear', // default/cube/page/concave/zoom/linear/fade/none
        backgroundTransition: 'slide',

				// Parallax scrolling
				// parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
				// parallaxBackgroundSize: '2100px 900px',

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
